/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

function str___len__(self: Ref): Int
	ensures result >= 0

function str___val__(self: Ref): Int

function str___create__(len: Int, value: Int) : Ref
	ensures str___len__(result) == len
	ensures str___val__(result) == value
	ensures typeof(result) == str()

function str___bool__(self: Ref) : Bool
    requires self != null ==> issubtypestr(typeof(self))
	ensures self != null ==> result == str___len__(self) != 0
	ensures self == null ==> !result

function str___eq__(self: Ref, other: Ref): Bool
    requires issubtypestr(typeof(self))
    ensures (str___val__(self) == str___val__(other)) == result
    ensures result ==> (str___len__(self) == str___len__(other))

function str___add__(self: Ref, other: Ref): Ref
    requires issubtypestr(typeof(self))
    ensures str___len__(result) == str___len__(self) + str___len__(other)
    ensures typeof(result) == str()

function str_join(self: Ref, other: Ref): Ref
    requires issubtypestr(typeof(self))
    ensures issubtypestr(typeof(result))

function str___mod__(self: Ref, other: Ref): Ref
    requires issubtypestr(typeof(self))
    ensures issubtypestr(typeof(result))

method str_split(self: Ref) returns (res: Ref)
    requires issubtypestr(typeof(self))
    ensures issubtypelist(typeof(res), str())
    ensures acc(res.list_acc)